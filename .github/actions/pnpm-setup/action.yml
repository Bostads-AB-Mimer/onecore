# Re-usable setup action for pnpm
#
#
# Cache key = pnpm-lock.yaml hash
# -------------------------------
# Invalidates automatically on dependency changes
#
#
# Cached path = pnpm store
# ------------------------
# Fast relink from cache, no need to re-download package tarballs
#
#
# No node_modules cache
# ---------------------
# Keeps things simple, and avoids clashes. node_modules will instead be restored
# by pnpm with symlinks from the cached pnpm store
#
#
# --frozen-lockfile
# -----------------
# Guarantees that CI builds uses exactly the intended lockfile and fails fast if
# it's out of sync. This means that builds will fail if declared dependencies does
# not match the lockfile.

name: pnpm-setup
description: Setup Node 20 and restore pnpm caches
inputs:
  run-generate-static:
    description: "Whether to run pnpm generate:static"
    required: false
    default: "false"
runs:
  using: "composite"
  steps:
    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 10.16.1

    - uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: pnpm
        cache-dependency-path: |
          **/pnpm-lock.yaml
        pnpm: 10.16.1

    # Cache pnpm store (fast reuse across jobs, keyed on lockfile)
    - name: Cache pnpm store
      id: pnpm-store
      uses: actions/cache@v4
      with:
        path: |
          ~/.local/share/pnpm/store
          libs/**/dist
        key: ${{ runner.os }}-node-20-pnpm-${{ hashFiles(
            '**/pnpm-lock.yaml',
            'libs/**/src/**',
            '**/tsconfig*.json')
          }}
        restore-keys: |
          ${{ runner.os }}-node-20-pnpm-

    # Always run install, but use --frozen-lockfile for safety
    - name: Install dependencies
      shell: bash
      run: pnpm install --frozen-lockfile --prefer-offline

    # Make sure generated code is present
    - name: Generate static
      if: inputs.run-generate-static == 'true'
      shell: bash
      run: pnpm generate:static

    # Build shared libs once for downstreams jobs that need compiled deps
    - name: Build libs
      if: steps.pnpm-store.outputs.cache-hit != 'true'
      shell: bash
      run: pnpm run build:libs

