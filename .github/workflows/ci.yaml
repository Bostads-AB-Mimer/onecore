name: CI

on:
  pull_request:
  push:
    branches: ["**"]
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch to run CI workflow on?"
        required: true
        default: "main"

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.read-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch || github.ref }}

      # "Pre-warm" the cache to make sure that all following jobs get cache hits
      - name: Setup
        uses: ./.github/actions/pnpm-setup

      # Read build matrix (later used to run jobs in parallel, per package)
      - name: Read build matrix
        id: read-matrix
        shell: bash
        run: |
          MATRIX=$(cat ./.github/build.matrix.json | jq -c .)
          echo "matrix=${MATRIX}" >> $GITHUB_OUTPUT

      # Emit ref/branch info for dependent workflows triggered with workflow_run
      - name: Emit ref/branch
        run: |
          echo "github.ref: ${{ github.ref }}"
          echo "github.ref_name: ${{ github.ref_name }}"
          echo "head_branch: ${{ github.event.workflow_run.head_branch }}"
          echo "head_sha: ${{ github.event.workflow_run.head_sha }}"

  lint:
    name: ${{ matrix.package }} - Lint
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.prepare.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch || github.ref }}

      - name: Setup
        uses: ./.github/actions/pnpm-setup

      - name: Run Lint
        run: pnpm run --filter ${{ matrix.package }} lint

  prettier:
    name: ${{ matrix.package }} - Prettier check
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.prepare.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch || github.ref }}

      - name: Setup
        uses: ./.github/actions/pnpm-setup

      - name: Run Prettier
        run: pnpm run --filter ${{ matrix.package }} prettier

  typecheck:
    name: ${{ matrix.package }} - Typecheck
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.prepare.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch || github.ref }}

      - name: Setup
        uses: ./.github/actions/pnpm-setup
        with:
          run-generate-static: ${{ matrix.runGenerateStatic }}

      - name: Run Typecheck
        run: pnpm run --filter ${{ matrix.package }} typecheck

  build:
    name: ${{ matrix.package }} - Build
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.prepare.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch || github.ref }}

      - name: Setup
        uses: ./.github/actions/pnpm-setup
        with:
          run-generate-static: ${{ matrix.runGenerateStatic }}

      - name: Build
        run: pnpm run --filter ${{ matrix.package }} build


  test:
    name: ${{ matrix.package }} - Run Tests
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.prepare.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch || github.ref }}

      - name: Setup
        uses: ./.github/actions/pnpm-setup

      - name: Run tests
        run: pnpm run --filter "${{ matrix.package }}" test
